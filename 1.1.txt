#include "REGX52.H" // Ensure the license for this library is valid and renewed

sbit IN1 = P1^4; //左轮正转
sbit IN2 = P1^3; //左轮反转
sbit ENA = P1^5; //左轮使能
sbit IN3 = P1^1; //右轮正转
sbit IN4 = P1^2; //右轮反转
sbit ENB = P1^0; //右轮使能

sbit E1 = P2^1; //SW2  亮为0 暗为1
sbit E2 = P0^3; //SW1
sbit E3 = P0^1; //SW3
sbit E4 = P0^5; //SW4
sbit E5 = P3^4; //SW5  亮为0 暗为1

// 定义占空比变量（0-124）
unsigned char DutyCycle1 = 62; // 电机1占空比（约50%）
unsigned char DutyCycle2 = 62; // 电机2占空比（约50%）

// 定时器初始化
void Timer0_Init() {
    TMOD = 0x02; // 定时器0，模式2（8位自动重装）
    TH0 = 255;   // 初值（对应1MHz中断频率）
    TL0 = 255;
    ET0 = 1;     // 使能定时器0中断
    EA = 1;      // 使能全局中断
    TR0 = 1;     // 启动定时器0
}

// 定时器0中断服务函数
void Timer0_ISR() interrupt 1 {
    static unsigned char pwmCounter = 0; // PWM 计数器

    pwmCounter++;
    if (pwmCounter >= 125) { // PWM 周期为125
        pwmCounter = 0;
    }

    // 电机1 PWM 控制
    if (pwmCounter < DutyCycle1) {
        ENA = 1; // 高电平
    } else {
        ENA = 0; // 低电平
    }

    // 电机2 PWM 控制
    if (pwmCounter < DutyCycle2) {
        ENB = 1; // 高电平
    } else {
        ENB = 0; // 低电平
    }
}

// 设置电机方向
void Motor1(unsigned char dir) {
    if (dir == 0) // 停止
    {
         IN1 = 0; IN2 = 0; 
    }
    else if (dir == 1)// 正转
    {
         IN1 = 1; IN2 = 0; 
    } 
    else if (dir == 2) // 反转
    {
         IN1 = 0; IN2 = 1;
    } 
}

void Motor2(unsigned char dir) {
    if (dir == 0)// 停止
    {
         IN3 = 0; IN4 = 0; 
    }
    else if (dir == 1)// 正转
    { 
        IN3 = 1; IN4 = 0; 
    } 
    else if (dir == 2) // 反转
    {
        IN3 = 0; IN4 = 1;
    } // 反转
}

// 设置电机1占空比
void Motor1PWM(unsigned char duty) {
    if (duty > 124) duty = 124; // 限制占空比范围
    DutyCycle1 = duty;
}

// 设置电机2占空比
void Motor2PWM(unsigned char duty) {
    if (duty > 124) duty = 124; // 限制占空比范围
    DutyCycle2 = duty;
}


void delay_nus(unsigned int i)  //延时:i>=12 ,i的最小延时单12 us
{ 
  i=i/10;
  while(--i);
}   
void delay_nms(unsigned int n)  //延时n ms
{ 
  n=n+1;
  while(--n)  
  delay_nus(900);         //延时 1ms,同时进行补偿
}  

void forward()
{
    Motor1(1);
    Motor2(1);
    Motor1PWM(124);
    Motor2PWM(124);
}

void back()
{
    Motor1(2);
    Motor2(2);
    Motor1PWM(50);
    Motor2PWM(50);
}

void left()
{
    Motor1(1);
    Motor2(1);
    Motor1PWM(50);
    Motor2PWM(124);

}

void right()
{
    Motor1(1);
    Motor2(1);
    Motor1PWM(124);
    Motor2PWM(50);
}

void left_big()
{
    Motor1(2);
    Motor2(1);
}

void right_big()
{
    Motor1(1);
    Motor2(2);
}

void stop()
{
    Motor1(0);
    Motor2(0);
}

void after_left(){
    forward();
    Motor1PWM(124);
    Motor2PWM(124);
    delay_nms(1000);
}

void main() {
    Timer0_Init(); // 初始化PWM定时器（保持原有配置）
    Motor1(1);     // 初始方向设为正转
    Motor2(1);     // 初始方向设为正转
    Motor1PWM(80); // 初始速度设为80（保持原有占空比）
    Motor2PWM(80);
while(1){
       if(E5 == 0){
            if(E1 == 0 && E2 == 0 && E3 == 0 && E4 == 0){
                forward();
                Motor1PWM(62);
                Motor2PWM(62);
            }
            if(E1 == 0 && E2 == 1 && E3 == 0 && E4 == 0){
                left();
                Motor1PWM(90);
                Motor2PWM(124);
            }
            if(E1 == 0 && E2 == 0 && E3 == 1 && E4 == 0){
                right();
                Motor1PWM(124);
                Motor2PWM(90);
            }
            if(E1 == 1 && E2 == 1 && E3 == 0  && E4 == 0){
                left_big();
                Motor1PWM(40);
                Motor2PWM(124);
            }
            if(E1 == 0 && E2 == 0 && E3 == 1 && E4 == 1){
                right_big();
                Motor1PWM(124);
                Motor2PWM(40);
            }
            if(E1 == 1 && E2 == 1 && E3 == 1  && E4 == 0){
                while(1){
                    left_big();
                    Motor1PWM(62);
                    Motor2PWM(124);
                    if(E5 == 1){
                        break;
                    }
                }
            }
            if(E1 == 0 && E2 == 1 && E3 == 1 && E4 == 1){
                while(E5 == 1){
                    right_big();
                    Motor1PWM(124);
                    Motor2PWM(62);
                    if(E5 == 1){
                        break;
                    }
                }
            }   
        }
       if(E5 == 1){
            if(E1 == 1 && E2 == 1 && E3 == 1 && E4 == 1){
                stop();
            }
            if(E1 == 0 && E2 == 1 && E3 == 1 && E4 == 0){
                forward();
            }
            if(E1 == 0 && E2 == 1 && E3 == 0 && E4 == 0){
                left();
                left();
                Motor1PWM(90);
                Motor2PWM(124);
            }
            if(E1 == 0 && E2 == 0 && E3 == 1 && E4 == 0){
                right();
                Motor1PWM(124);
                Motor2PWM(90);
            }
            if(E1 == 1 && E2 == 1 && E3 == 0  && E4 == 0){
                left_big();
                Motor1PWM(40);
                Motor2PWM(124);
            }
            if(E1 == 0 && E2 == 0 && E3 == 1 && E4 == 1){
                right_big();
                Motor1PWM(124);
                Motor2PWM(40);
            }
            if(E1 == 1 && E2 == 1 && E3 == 1  && E4 == 0){
                while(1){
                    left_big();
                    Motor1PWM(124);
                    Motor2PWM(124);
                    if(E5 == 1){
                        break;
                    }
                }
            }
            if(E1 == 0 && E2 == 1 && E3 == 1 && E4 == 1){
                while(E5 == 1){
                    right_big();
                    Motor1PWM(124);
                    Motor2PWM(124);
                    if(E5 == 1){
                        break;
                    }
                }
            }
        }
    }
}